// исходный текст программы сохранен в кодировке UTF-8 без BOM

// using-logger.cpp
// использование регистратора событий (logger) для отладки

// В программе используются возможности регистратора, созданного
// третьей стороной: https://github.com/SergiusTheBest/plog.
// Для использования этого регистратора я скопировал ZIP-архив с файлами
// проекта с «Гитхаба» к себе на компьютер. После этого я скопировал
// из полученного ZIP-архива папку ..\include\plog\ в папку ..\plog\ своего
// учебного проекта. После этого компилятор сможет найти нужные заголовочные
// файлы, подключаемые ниже с помощью директив #include препроцессора.

// Кроме того, для успешной компиляции понадобится указать компилятору
// (я работаю из командной строки) в командной строке путь к папке
// с заголовочными файлами третьей стороны. Так как я поместил эти файлы
// в текущей папке (папке своего проекта), то нужно будет указать путь
// к ней, так как мы производим включение с использованием угловых
// скобок <>, в этом случае компилятор по умолчанию не ищет заголовочные
// файлы в текущей папке. Для указания пути к папке с заголовочными файлами
// в командной строке используется ключ /I для компилятора MSVC и ключ -I
// для компилятора g++ (GCC). (Я указывал абсолютный путь, так как
// указание относительного пути у меня не сработало.)

#include <plog/Log.h> // Шаг 1: включить заголовочные файлы регистратора
#include <plog/Initializers/RollingFileInitializer.h> // Шаг 1: этот тоже
#include <iostream>

int getUserInput()
{
    PLOGD << "getUserInput() вызвана"; // макрос PLOGD определен
                                       // библиотекой plog
    std::cout << "Введите число: ";
    int x{};
    std::cin >> x;
    return x;
}

int main()
{
    plog::init(plog::debug, "Logfile.txt"); // Шаг 2: инициализация регистратора
    //plog::init(plog::none, "Logfile.txt"); // plog::none выключает вывод
                                             // в журнал большинства сообщений,
                                             // отключая регистрацию событий

    PLOGD << "main() вызвана"; // Шаг 3: вывести в журнал так, как если бы
                               // вы производили вывод в окно консоли

    int x{ getUserInput() };
    std::cout << "Вы ввели: " << x << '\n';

    return 0;
}