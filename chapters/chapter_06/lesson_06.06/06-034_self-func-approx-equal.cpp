// исходный текст программы сохранен в кодировке UTF-8 без BOM

// self-func-approx-equal.cpp
// самодельная функция для определения того, что числа с плавающей запятой
// приблизительно равны, не всегда выдает разумный результат

#include <iostream>
#include <cmath>    // для функции std::abs
#include <iomanip>  // для манипулятора std::setprecision

// буква «эпсилон» — одна из букв греческого алфавита, в математике этой
// буквой, в частности, обозначают очень небольшую положительную величину,
// в нашем случае absEpsilon и является такой величиной, приставка abs
// обозначает, что величина эта абсолютная, то есть постоянная для любых
// сравниваемых чисел a и b

bool approximatelyEqualAbs(double a, double b, double absEpsilon)
{
    // если расстояние между a и b меньше или равно absEpsilon,
    // то a и b «достаточно близки», чтобы считать их равными
    return std::abs(a - b) <= absEpsilon;
}

int main()
{
    // примеры применения функции approximatelyEqualAbs

    double absEpsilon{ 0.00001 };
    std::cout << std::setprecision(10);

    // 1
    if (approximatelyEqualAbs(1.0, 1.0001, absEpsilon))
        std::cout << 1.0 << " равно " << 1.0001 << '\n';
    else
        std::cout << 1.0 << " не равно " << 1.0001 << '\n';

    // 2
    if (approximatelyEqualAbs(0.0000001, 0.00001, absEpsilon))
        std::cout << 0.0000001 << " равно " << 0.00001 << '\n';
    else
        std::cout << 0.0000001 << " не равно " << 0.00001 << '\n';

    // 3
    if (approximatelyEqualAbs(10000.0, 10000.0001, absEpsilon))
        std::cout << 10000.0 << " равно " << 10000.0001 << '\n';
    else
        std::cout << 10000.0 << " не равно " << 10000.0001 << '\n';

    // результат работы этой программы у меня на компьютере:
    // 1 не равно 1.0001         // разумно при absEpsilon = 0.00001
    // 1e-07 равно 1e-05         // неразумно: разница на 2 порядка
    // 10000 не равно 10000.0001 // неразумно: тут нужно смотреть относительно
                                 //            самих чисел

    // автору учебника результат работы функции approximatelyEqualAbs
    // в случае 1 кажется разумным, а в случаях 2 и 3 — неразумным

    return 0;
}