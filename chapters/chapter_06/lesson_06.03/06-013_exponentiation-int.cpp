// исходный текст программы сохранен в кодировке UTF-8 без BOM

// exponentiation-int.cpp
// операция возведения числа в степень (для значений целочисленных типов)

// в программе используется алгоритм «быстрого возведения в степень»
// (см. статью в википедии), когда вместо перемножения числа на себя
// множество раз (соответствующее показателю степени) число сначала
// возводится в квадрат, затем уже перемножается на себя квадрат исходного
// числа и так далее (поэтому в английском языке этот алгоритм называют
// «exponentiation by squaring»); этот алгоритм более эффективен, чем
// обычное перемножение исходного числа на себя множество раз

#include <cassert>  // для макроса assert
#include <cstdint>  // для типа std::int64_t
#include <iostream>

// заметьте: степень exp должна быть неотрицательной
// заметьте: не реализованы проверки на соблюдение области значения
//           и переполнение, поэтому используйте эту функцию с осторожностью
constexpr std::int64_t powInt(std::int64_t base, int exp)
{
    assert(exp >= 0 && "powInt: параметр exp имеет отрицательное значение");

    // обработка случая, когда в степень возводится число 0
    if (base == 0)
        return (exp == 0) ? 1 : 0;

    std::int64_t result{ 1 };
    while (exp > 0)
    {
        if (exp & 1) // если число exp является нечетным
            result *= base;
        exp /= 2;
        base *= base;
    }

    return result;
}

int main()
{
    std::cout << powInt(7, 12) << '\n'; // возведение числа 7 в степень 12

    return 0;
}