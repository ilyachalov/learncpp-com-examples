// исходный текст программы сохранен в кодировке UTF-8 без BOM

// expressions.cpp
// выражения

#include <iostream>

// five() — это функция, которая возвращает значение 5
int five()
{
    return 5;
}

int main()
{
    int a{ 2 };           // инициализировать переменную a литералом 2
    int b{ 2 + 3 };       // инициализировать переменную b вычисленным значением 5
    int c{ (2 * 3) + 4 }; // инициализировать переменную c вычисленным значением 10
    int d{ b };           // инициализировать переменную d значением 5 переменной b
    int e{ five() };      // инициализировать переменную e значением 5 от функции

    // примеры выражений и того, как они вычисляются

    2;              // 2 — это литерал, который вычисляется в значение 2
    "Привет, мир!"; // "Привет, мир!" — литерал, вычисляемый в текст "Привет, мир!"
    a;              // a — это переменная, вычисляемая в значение переменной a
    2 + 3;          // оператор+ использует операнды 2 и 3 для вычисления значения 5
    five();         // вычисляется в значение, возвращаемое функцией five()

    // вычисление выражений со сторонними эффектами

    a = 5;          // присваивает 5 переменной a, вычисляется в переменную a
    a = 2 + 3;      // присваивает 5 переменной a, вычисляется в переменную a
    std::cout << a; // выводит переменную a в консоль, вычисляется в std::cout
    std::cout << '\n';

    // Выражения не могут быть скомпилированы сами по себе, только в составе
    // утверждений. Поэтому выше я завершал все выражения точкой с запятой,
    // превращая их в утверждения. Это позволяет скомпилировать эту программу
    // без ошибок от компилятора.

    int x{ 2 + 3 }; // 2 + 3 является выражением, оно не имеет точки с запятой
                    // в конце; точка с запятой есть в конце утверждения,
                    // содержащего выражение 2 + 3

    int y; // определение переменной, в этом утверждении нет выражения

    int y2 = 5; // это утверждение содержит выражение 5

    x = 5; // это утверждение-выражение (expression statement)

    five(); // это тоже утверждение-выражение

    std::cout << x; // это тоже утверждение-выражение
    std::cout << '\n';

    return 0;
}