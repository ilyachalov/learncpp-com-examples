// исходный текст программы сохранен в кодировке UTF-8 без BOM

// variables-initialization.cpp
// инициализация переменных

#include <iostream>

int main()
{
    int a;       // нет инициализатора (инициализация по умолчанию)
    int b = 5;   // инициализатор после знака «равно» (копирующая инициализация)
    int c(6);    // инициализатор в круглых скобках (прямая инициализация)

    // Способы списочной инициализации (C++11) (предпочтительно использовать их)
    int d{7};    // инициализатор в фигурных скобках (прямая списочная инициализация)
    int e = {8}; // инициализатор в фигурных скобках после знака «равно»
                 // (копирующая списочная инициализация)
    int f{};     // инициализатор — пустые фигурные скобки (инициализация значением)

    int width = 5; // копирующая инициализация значением 5 переменной width

    int width2( 5 ); // прямая инициализация значением 5 переменной width2

    // списочная инициализация

    int width3{ 5 };  // прямая списочная инициализация значением 5 переменной width3
    int height = {6}; // копирующая списочная инициализация значением 6 переменной height
    int depth{};      // инициализация значением

    // int width4{ 4.5 }; // ошибка: число с дробным значением не подходит типу int

    int width4{}; // инициализация значением / инициализация нулем (значением 0)

    // инициализация сразу нескольких переменных

    int g, h;

    int i = 5, j = 6;          // копирующая инициализация
    int k( 7 ), l( 8 );        // прямая инициализация
    int m{ 9 }, n{ 10 };       // прямая списочная инициализация (предпочтительно)
    int o = { 9 }, p = { 10 }; // копирующая списочная инициализация
    int q{}, r{};              // инициализация значением

    // int s, t = 5;  // неправильно (переменная s осталась неинициализированной!)
    int s = 5, t = 5; // правильно

    // прямая или списочная инициализация более наглядны
    int u, v( 5 );
    int w, x{ 5 };

    return 0;
}