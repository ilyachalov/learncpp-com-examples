// исходный текст программы сохранен в кодировке UTF-8 без BOM

// improperly-string-view2.cpp
// программа иллюстрирует один из случаев неправильного использования объекта
// типа std::string_view: просматриваемая строка будет уничтожена раньше,
// чем программа закончит использование просмотра, как и в предыдущем случае,
// но в данном примере это произойдет из-за использования значения,
// возвращаемого функцией

#include <iostream>
#include <string>      // для std::string
#include <string_view> // для std::string_view

std::string getName()
{
    std::string s{ "Алекс" };
    return s;
}

int main()
{
    std::string_view name{ getName() }; // name инициализируется значением,
                                        // возвращаемым функцией

    // значение, возвращенное функцией getName, существует только
    // в утверждении выше, далее (ниже) оно уже не существует,
    // поэтому объект name смотрит на несуществующую строку и
    // попытка вывода объекта name в консоль приведет к неопределенному
    // поведению

    std::cout << name << '\n'; // неопределенное поведение

    return 0;
}