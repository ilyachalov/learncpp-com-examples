// исходный текст программы сохранен в кодировке UTF-8 без BOM

// std-string-length-type.cpp
// тип длины строки класса std::string

#include <iostream>
#include <string>   // для std::string

int main()
{
    std::string name{ "Илья" };
    // int length{ name.length() }; // ошибка: сужающее преобразование
                                    // из size_t в int
    int length{ static_cast<int>(name.length()) }; // нет ошибки
    std::cout << name << " состоит из " << length << " байтов\n";

    // size_t — это целочисленный тип без знака, в языке C++ есть функция
    // std::ssize для получения длины (размера) целочисленного типа со знаком

    std::cout << name << " состоит из " << std::ssize(name) << " байтов\n";

    // Однако, приведенное выше преобразование типа с помощью static_cast
    // и функцию std::ssize нельзя считать равнозначными, так как при
    // преобразовании size_t в int у меня на компьютере произошло
    // преобразование 64-битного целого без знака в 32-битное со знаком,
    // а в случае std::ssize мы получает 64-битное со знаком. Как видно
    // из этого, хоть оба варианта дают целое со знаком, но может быть
    // разница в размере полученного значения.

    return 0;
}