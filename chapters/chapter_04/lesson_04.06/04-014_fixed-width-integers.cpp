// исходный текст программы сохранен в кодировке UTF-8 без BOM

// fixed-width-integers.cpp
// целочисленные типы фиксированного размера

#include <cstdint>  // для целочисленных типов фиксированного размера
#include <iostream>

int main()
{
    std::int8_t x{ 36 }; // 1 байт, со знаком, -128..127
                         // интерпретируется как символ (signed char)
    std::cout << "int8_t: " << x << ", " << int(x) << ", " << sizeof(x) << '\n';

    std::uint8_t x2{ 36 }; // 1 байт, без знака, 0..255
                           // интерпретируется как символ (unsigned char)
    std::cout << "uint8_t: " << x2 << ", " << int(x2) << ", " << sizeof(x2) << '\n';

    std::int16_t x3{ 36 }; // 2 байта, со знаком, -32768..32767
    std::cout << "int16_t: " << x3 << ", " << sizeof(x3) << '\n';

    std::uint16_t x4{ 36 }; // 2 байта, без знака, 0..65535
    std::cout << "uint16_t: " << x4 << ", " << sizeof(x4) << '\n';

    std::int32_t x5{ 36 }; // 4 байта, со знаком, -2'147'483'648..2'147'483'647
    std::cout << "int32_t: " << x5 << ", " << sizeof(x5) << '\n';

    std::uint32_t x6{ 36 }; // 4 байта, без знака, 0..4'294'967'295
    std::cout << "uint32_t: " << x6 << ", " << sizeof(x6) << '\n';

    std::int64_t x7{ 36 }; // 8 байтов, со знаком, -9'223'372'036'854'775'808..
                           // ..9'223'372'036'854'775'807
    std::cout << "int64_t: " << x7 << ", " << sizeof(x7) << '\n';

    std::uint64_t x8{ 36 }; // 8 байтов, без знака,
                            // 0..18'446'744'073'709'551'615
    std::cout << "uint64_t: " << x8 << ", " << sizeof(x8) << '\n';

    return 0;
}